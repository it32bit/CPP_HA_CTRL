{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build",
            "type": "cmake",
            "command": "build",
            "targets": [
                "all"
            ],
            "preset": "debug",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Clang-Tidy",
            "type": "cmake",
            "command": "build",
            "targets": [
                "clang_tidy_both"
            ],
            "preset": "${command:cmake.activeBuildPresetName}",
            "group": "build",
            "detail": "Static Analysis Tool Output: Console and File",
            "problemMatcher": []
        },
        {
            "label": "Clang-Tidy File",
            "type": "cmake",
            "command": "build",
            "targets": [
                "clang_tidy_log"
            ],
            "preset": "${command:cmake.activeBuildPresetName}",
            "group": "build",
            "detail": "Static Analysis Tool Output: /bin/clang-tidy-warn.log",
            "problemMatcher": []
        },
        {
            "label": "Clang-Tidy Consle",
            "type": "cmake",
            "command": "build",
            "targets": [
                "clang_tidy_console"
            ],
            "preset": "${command:cmake.activeBuildPresetName}",
            "group": "build",
            "detail": "Static Analysis Tool Output: Console",
            "problemMatcher": []
        },
        {
            "label": "Clang-Tidy HTML",
            "type": "shell",
            "command": "${workspaceFolder}/Tools/clang-tidy-html.sh",
            "group": "build",
            "detail": "Static Analysis Tool Output: LOG & HTML",
            "problemMatcher": []
        },
        {
            "label": "Clean",
            "type": "cmake",
            "command": "build",
            "targets": [
                "clean-extra"
            ],
            "preset": "${command:cmake.activeBuildPresetName}",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Flash",
            "type": "shell",
            "command": "STM32_Programmer_CLI",
            "args": [
                "-c",
                "port=SWD",
                "-d",
                "${workspaceFolder}/bin/ha-ctrl.elf",
                "-hardRst",
                "-rst",
                "--start"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "ReBuild",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Clean",
                "Build"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "ReBuildFlash",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Clean",
                "Build",
                "Flash"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "Clean rebuild",
            "type": "cmake",
            "command": "cleanRebuild",
            "targets": [
                "all"
            ],
            "preset": "${command:cmake.activeBuildPresetName}",
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "List all available communication interfaces",
            "type": "shell",
            "command": "STM32_Programmer_CLI",
            "args": [
                "--list"
            ],
            "group": "build",
            "problemMatcher": []
        },
        {
            "label": "CMake: build",
            "type": "cmake",
            "command": "build",
            "targets": [
                "all"
            ],
            "preset": "debug",
            "group": "build",
            "problemMatcher": [],
            "detail": "CMake build task"
        }
    ]
}

